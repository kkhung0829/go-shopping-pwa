{"version":3,"sources":["redux/actionTypes.js","models/shoppingItem.js","redux/shopping/initialState.js","redux/shopping/reducer.js","redux/reducer.js","redux/shopping/selectors.js","redux/shopping/actions.js","components/TakePhoto.js","containers/ShoppingItemDetail.js","containers/ShoppingItem.js","containers/ShoppingItemList.js","store.js","App.js","serviceWorker.js","index.js"],"names":["keyMirror","SHOPPING_ITEM_ADD","SHOPPING_ITEM_DEL","SHOPPING_ITEM_UPDATE","SHOPPING_ITEM_INC_UNIT","SHOPPING_ITEM_DEC_UNIT","SHOPPING_ITEM_CLEAR","shoppingItem","props","Object","assign","id","Math","random","toString","Record","name","unitPrice","numUnit","imgURI","InitialState","items","List","require","default","initialState","rootInitialState","shopping","shoppingInitialState","reducer","combineReducers","state","action","type","updateIn","newItem","data","unshift","filter","item","map","getIn","merge","selectItems","createSelector","makeSelectItemById","_","find","selectTotalCost","reduce","total","shoppingItemAdd","shoppingItemDel","shoppingItemUpdate","shoppingItemIncUnit","shoppingItemDecUnit","shoppingItemClear","TakePhoto","Modal","open","onClose","onTakePhotoAnimationDone","dataUri","onTakePhoto","ShoppingItemDetail","selectItemById","useMemo","shoppingSelector","useSelector","dispatch","useDispatch","useState","setName","setUnitPrice","setNumUnit","setImgURI","openTakePhoto","setOpenTakePhoto","isEdit","setIsEdit","initState","val","undefined","useEffect","size","dimmer","Header","Content","Form","Field","Input","value","onChange","e","target","Number","Button","icon","fluid","onClick","Image","src","Actions","floated","shoppingAction","setTimeout","ShoppingItem","openEditItemModal","setOpenEditItemModal","Card","key","Icon","circular","displayType","thousandSeparator","prefix","decimalScale","Meta","extra","className","basic","color","ShoppingItemList","totalCost","openAddItemModal","setOpenAddItemModal","uiItems","contextRef","createRef","ref","Sticky","context","Group","centered","persistConfig","transforms","immutableTransform","records","storage","stateReconciler","autoMergeLevel1","presistedReducer","persistReducer","rootReducer","store","createStore","applyMiddleware","persistor","persistStore","createReduxStore","App","loading","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e126843d.chunk.js","sourcesContent":["import keyMirror from 'key-mirror';\r\n\r\nexport default keyMirror({\r\n    // ------ shopping ------\r\n    SHOPPING_ITEM_ADD: null,\r\n    SHOPPING_ITEM_DEL: null,\r\n    SHOPPING_ITEM_UPDATE: null,\r\n    SHOPPING_ITEM_INC_UNIT: null,\r\n    SHOPPING_ITEM_DEC_UNIT: null,\r\n    SHOPPING_ITEM_CLEAR: null,\r\n});","import { Record } from 'immutable';\r\n\r\nexport class shoppingItem extends Record({\r\n    id: null,\r\n    name: null,\r\n    unitPrice: 0,\r\n    numUnit: 1,\r\n    imgURI: null,\r\n}) {\r\n    constructor(props) {\r\n        super(Object.assign(\r\n            {},\r\n            props,\r\n            {\r\n                id: (props && props.id) || Math.random().toString()\r\n            }\r\n        ));\r\n    }\r\n}","import { Record, List } from 'immutable';\r\nimport { shoppingItem } from '../../models';\r\n\r\nconst InitialState = Record({\r\n    items: List(),  // <shoppingItem>\r\n}, 'ShoppingInitialState');\r\n\r\nexport { shoppingItem };\r\nexport default InitialState;","import InitialState, { shoppingItem } from './initialState';\r\nimport { List } from 'immutable';\r\n\r\nconst {\r\n    SHOPPING_ITEM_ADD,\r\n    SHOPPING_ITEM_DEL,\r\n    SHOPPING_ITEM_UPDATE,\r\n    SHOPPING_ITEM_INC_UNIT,\r\n    SHOPPING_ITEM_DEC_UNIT,\r\n    SHOPPING_ITEM_CLEAR,\r\n} = require('../actionTypes').default;\r\n\r\nconst initialState = new InitialState();\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case SHOPPING_ITEM_ADD:\r\n            return state.updateIn(['items'], items => {\r\n                const newItem = new shoppingItem({\r\n                    name: action.data.name,\r\n                    unitPrice: action.data.unitPrice,\r\n                    numUnit: action.data.numUnit,\r\n                    imgURI: action.data.imgURI,\r\n                });\r\n\r\n                return items.unshift(newItem);\r\n            });\r\n\r\n        case SHOPPING_ITEM_DEL:\r\n            return state.updateIn(['items'], items => {\r\n                return items.filter(item => {\r\n                    return item.id !== action.data;\r\n                });\r\n            });\r\n\r\n        case SHOPPING_ITEM_UPDATE:\r\n            return state.updateIn(['items'], items => {\r\n                return items.map(item => {\r\n                    if (item.getIn(['id']) === action.data.id) {\r\n                        return item.merge(action.data);\r\n                    } else {\r\n                        return item;\r\n                    }\r\n                });\r\n            });\r\n\r\n        case SHOPPING_ITEM_INC_UNIT:\r\n            return state.updateIn(['items'], items => {\r\n                return items.map(item => {\r\n                    if (item.getIn(['id']) === action.data) {\r\n                        return item.updateIn(['numUnit'], numUnit => {\r\n                            return numUnit + 1;\r\n                        });\r\n                    } else {\r\n                        return item;\r\n                    }\r\n                });\r\n            });\r\n\r\n        case SHOPPING_ITEM_DEC_UNIT:\r\n            return state.updateIn(['items'], items => {\r\n                return items.map(item => {\r\n                    if (item.getIn(['id']) === action.data &&\r\n                        item.getIn(['numUnit']) > 0) {\r\n                        return item.updateIn(['numUnit'], numUnit => {\r\n                            return numUnit - 1;\r\n                        });\r\n                    } else {\r\n                        return item;\r\n                    }\r\n                });\r\n            });\r\n    \r\n        case SHOPPING_ITEM_CLEAR:\r\n            return state.updateIn(['items'], items => List());\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","// import { combineReducers } from 'redux-immutable';\r\nimport { combineReducers } from 'redux';\r\n\r\nimport shoppingReducer from './shopping/reducer';\r\nimport shoppingInitialState, { shoppingItem } from './shopping/initialState';\r\n\r\nconst rootInitialState = {\r\n    shopping: new shoppingInitialState(),\r\n};\r\n\r\nconst reducer = combineReducers({\r\n    shopping: shoppingReducer,\r\n});\r\n\r\nconst selectShoppingState = state => state.shopping;\r\n\r\nexport { rootInitialState, shoppingInitialState, shoppingItem, selectShoppingState};\r\nexport default reducer;","import { createSelector } from 'reselect';\r\nimport { selectShoppingState } from '../reducer';\r\n\r\nconst selectItems = createSelector(\r\n    selectShoppingState,\r\n    (shopping) => shopping.getIn(['items'])\r\n);\r\n\r\nconst makeSelectItemById = () => createSelector(\r\n    selectItems,\r\n    (_, id) => id,\r\n    (items, id) => items.find(\r\n        (item) => item.id === id\r\n    )\r\n);\r\n\r\nconst selectTotalCost = createSelector(\r\n    [selectItems],\r\n    (items) => items.reduce(\r\n        (total, item) => (total + item.unitPrice * item.numUnit),\r\n        0\r\n    )\r\n);\r\n\r\nexport { selectItems, makeSelectItemById, selectTotalCost };","const {\r\n    SHOPPING_ITEM_ADD,\r\n    SHOPPING_ITEM_DEL,\r\n    SHOPPING_ITEM_UPDATE,\r\n    SHOPPING_ITEM_INC_UNIT,\r\n    SHOPPING_ITEM_DEC_UNIT,\r\n    SHOPPING_ITEM_CLEAR,\r\n} = require('../actionTypes').default;\r\n\r\nexport function shoppingItemAdd(name, unitPrice, numUnit, imgURI) {\r\n    return {\r\n        type: SHOPPING_ITEM_ADD,\r\n        data: {\r\n            name,\r\n            unitPrice,\r\n            numUnit,\r\n            imgURI,\r\n        },\r\n    };\r\n}\r\n\r\nexport function shoppingItemDel(id) {\r\n    return {\r\n        type: SHOPPING_ITEM_DEL,\r\n        data: id,\r\n    }\r\n}\r\n\r\nexport function shoppingItemUpdate(id, name, unitPrice, numUnit, imgURI) {\r\n    return {\r\n        type: SHOPPING_ITEM_UPDATE,\r\n        data: {\r\n            id,\r\n            name,\r\n            unitPrice,\r\n            numUnit,\r\n            imgURI,\r\n        },\r\n    };\r\n}\r\n\r\nexport function shoppingItemIncUnit(id) {\r\n    return {\r\n        type: SHOPPING_ITEM_INC_UNIT,\r\n        data: id,\r\n    };\r\n}\r\n\r\nexport function shoppingItemDecUnit(id) {\r\n    return {\r\n        type: SHOPPING_ITEM_DEC_UNIT,\r\n        data: id,\r\n    };\r\n}\r\n\r\nexport function shoppingItemClear() {\r\n    return {\r\n        type: SHOPPING_ITEM_CLEAR,\r\n    };\r\n}","import React from 'react';\r\nimport Camera from 'react-html5-camera-photo';\r\nimport 'react-html5-camera-photo/build/css/index.css';\r\nimport {\r\n    Modal,\r\n} from 'semantic-ui-react'\r\n\r\nexport default function TakePhoto(props) {\r\n    return (\r\n        <Modal\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n        >\r\n            <Camera\r\n                onTakePhotoAnimationDone={(dataUri) => {\r\n                    props.onTakePhoto(dataUri);\r\n                    props.onClose();\r\n                }}\r\n            />\r\n        </Modal>\r\n    );\r\n}","import React, { useState, useMemo, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    Modal,\r\n    Form,\r\n    Button,\r\n    Input,\r\n    Image,\r\n} from 'semantic-ui-react';\r\n\r\nimport TakePhoto from '../components/TakePhoto';\r\n\r\nimport { shopping as shoppingSelector } from '../redux/selectors';\r\nimport { shopping as shoppingAction } from '../redux/actions';\r\n\r\nfunction isDefinedAndNotNull(val) {\r\n    return val !== undefined && val !== null;\r\n}\r\n\r\nexport default function ShoppingItemDetail(props) {\r\n    const selectItemById = useMemo(shoppingSelector.makeSelectItemById, []);\r\n    const item = useSelector(state => selectItemById(state, props.id));\r\n    const dispatch = useDispatch();\r\n\r\n    let [name, setName] = useState('');\r\n    let [unitPrice, setUnitPrice] = useState(0.0);\r\n    let [numUnit, setNumUnit] = useState(1);\r\n    let [imgURI, setImgURI] = useState(null);\r\n    let [openTakePhoto, setOpenTakePhoto] = useState(false);\r\n    let [isEdit, setIsEdit] = useState(false);\r\n\r\n    function initState(item) {\r\n        if (isDefinedAndNotNull(item)) {\r\n            setName(item.name ? item.name : '');\r\n            setUnitPrice(item.unitPrice);\r\n            setNumUnit(item.numUnit);\r\n            setImgURI(item.imgURI);\r\n            setIsEdit(true);\r\n        } else {\r\n            setName('');\r\n            setUnitPrice(0.0);\r\n            setNumUnit(1);\r\n            setImgURI(null);\r\n            setIsEdit(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        initState(item);\r\n    }, [\r\n        item,\r\n        props.id,\r\n    ]);\r\n\r\n    return (\r\n        <Modal\r\n            open={props.open}\r\n            onClose={() => {\r\n                initState(null);\r\n                props.onClose();\r\n            }}\r\n            size='small'\r\n            dimmer='inverted'\r\n        >\r\n            <Modal.Header>{isEdit ? 'Edit' : 'Add'}</Modal.Header>\r\n            <Modal.Content>\r\n                <Form>\r\n                    <Form.Field>\r\n                        <label>Name</label>\r\n                        <Input type=\"text\"\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Unit Price</label>\r\n                        <Input type=\"number\"\r\n                            value={unitPrice}\r\n                            onChange={(e) => setUnitPrice(Number(e.target.value))}\r\n                        />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Num Unit</label>\r\n                        <Input type=\"number\"\r\n                            value={numUnit}\r\n                            onChange={(e) => setNumUnit(Number(e.target.value))}\r\n                        />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Photo</label>\r\n                        <Button icon='camera' fluid\r\n                            onClick={() => setOpenTakePhoto(true)}\r\n                        />\r\n                        <Image src={imgURI}/>\r\n                    </Form.Field>\r\n                </Form>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button floated='left' icon='save'\r\n                    onClick={() => {\r\n                        if (isEdit) {\r\n                            dispatch(shoppingAction.shoppingItemUpdate(\r\n                                item.id,\r\n                                name,\r\n                                unitPrice,\r\n                                numUnit,\r\n                                imgURI\r\n                            ));\r\n                        } else {\r\n                            dispatch(shoppingAction.shoppingItemAdd(\r\n                                name,\r\n                                unitPrice,\r\n                                numUnit,\r\n                                imgURI\r\n                            ));\r\n                        }\r\n                        initState(null);\r\n                        props.onClose();\r\n                    }}\r\n                />\r\n                <Button floated='right' icon='cancel'\r\n                    onClick={() => {\r\n                        initState(null);\r\n                        props.onClose();\r\n                    }}\r\n                />\r\n            </Modal.Actions>\r\n            <TakePhoto\r\n                open={openTakePhoto}\r\n                onClose={() => {\r\n                    setTimeout(() => {\r\n                        setOpenTakePhoto(false);\r\n                    }, 0);\r\n                }}\r\n                onTakePhoto={(dataUri) => {\r\n                    setImgURI(dataUri);\r\n                }}\r\n            />\r\n        </Modal>\r\n    );\r\n}","import React, {useState, useMemo} from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    Card,\r\n    Button,\r\n    Image,\r\n    Icon,\r\n} from 'semantic-ui-react';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nimport { shopping as shoppingSelector } from '../redux/selectors';\r\nimport { shopping as shoppingAction } from '../redux/actions';\r\n\r\nimport ShoppingItemDetail from './ShoppingItemDetail';\r\n\r\nexport default function ShoppingItem(props) {\r\n    const selectItemById = useMemo(shoppingSelector.makeSelectItemById, []);\r\n    const item = useSelector(state => selectItemById(state, props.id));\r\n    const dispatch = useDispatch();\r\n    const [openEditItemModal, setOpenEditItemModal] = useState(false);\r\n\r\n    return (\r\n        <Card key={item.id}>\r\n            <Card.Content onClick={() => setOpenEditItemModal(true)}>\r\n                {\r\n                    item.imgURI ?\r\n                        (<Image floated=\"left\" size=\"mini\"\r\n                            src={item.imgURI}\r\n                        />) :\r\n                        (\r\n                            <Image floated=\"left\">\r\n                                <Icon name=\"photo\" />\r\n                            </Image>\r\n                        ) \r\n                }\r\n                \r\n                <Button floated=\"right\" icon='trash' circular\r\n                    onClick={() => dispatch(shoppingAction.shoppingItemDel(item.id))}\r\n                />\r\n                \r\n                <Card.Header>\r\n                    <NumberFormat\r\n                        value={item.unitPrice * item.numUnit}\r\n                        displayType={'text'}\r\n                        thousandSeparator={true}\r\n                        prefix={'$'}\r\n                        decimalScale={1}\r\n                    />\r\n                </Card.Header>\r\n                <Card.Meta>@ ${item.unitPrice} X {item.numUnit}</Card.Meta>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                <div className='ui two buttons'>\r\n                    <Button basic color='green'\r\n                        onClick={() => dispatch(shoppingAction.shoppingItemIncUnit(item.id))}\r\n                    >+</Button>\r\n                    <Button basic color='red'\r\n                        onClick={() => dispatch(shoppingAction.shoppingItemDecUnit(item.id))}\r\n                    >-</Button>\r\n                </div>\r\n            </Card.Content>\r\n            <ShoppingItemDetail\r\n                id={item.id}\r\n                open={openEditItemModal}\r\n                onClose={() => {\r\n                    setTimeout(() => {\r\n                        setOpenEditItemModal(false);\r\n                    }, 0);\r\n                }}\r\n            />\r\n        </Card>\r\n    );\r\n}","import React, { useState, createRef } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n    Sticky,\r\n    Button,\r\n    Card,\r\n} from 'semantic-ui-react';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nimport { shopping as shoppingSelector } from '../redux/selectors';\r\n\r\nimport ShoppingItem from './ShoppingItem';\r\nimport ShoppingItemDetail from './ShoppingItemDetail';\r\n\r\nexport default function ShoppingItemList() {\r\n    const items = useSelector(shoppingSelector.selectItems);\r\n    const totalCost = useSelector(shoppingSelector.selectTotalCost);\r\n    const [openAddItemModal, setOpenAddItemModal] = useState(false);\r\n\r\n    const uiItems = items.map(item => {\r\n        return (\r\n            <ShoppingItem key={item.id} id={item.id} />\r\n        );\r\n    });\r\n\r\n    const contextRef = createRef();\r\n    return (\r\n        <div ref={contextRef}>\r\n            <Sticky context={contextRef}>\r\n                <Card fluid>\r\n                    <Card.Content>\r\n                        <Button floated=\"right\"\r\n                            onClick={() => setOpenAddItemModal(true)}\r\n                        >+</Button>\r\n                        <Card.Header>\r\n                            <NumberFormat\r\n                                value={totalCost}\r\n                                displayType={'text'}\r\n                                thousandSeparator={true}\r\n                                prefix={'Total: $'}\r\n                                decimalScale={1}\r\n                            />\r\n                        </Card.Header>\r\n                    </Card.Content>\r\n                </Card>\r\n            </Sticky>\r\n            <div>\r\n                <Card.Group centered>{uiItems}</Card.Group>\r\n            </div>\r\n            <ShoppingItemDetail\r\n                open={openAddItemModal}\r\n                onClose={() => setOpenAddItemModal(false)}/>\r\n        </div>\r\n    );\r\n}","import { createStore, applyMiddleware } from 'redux';\r\nimport { persistReducer, persistStore } from 'redux-persist'\r\nimport immutableTransform from 'redux-persist-transform-immutable'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web and AsyncStorage for react-native\r\nimport autoMergeLevel1 from 'redux-persist/lib/stateReconciler/autoMergeLevel1';\r\nimport Immutable from 'immutable';\r\n\r\nimport rootReducer, {\r\n    rootInitialState,\r\n    shoppingInitialState,\r\n    shoppingItem,\r\n} from './redux/reducer';\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n    var installDevTools = require('immutable-devtools');\r\n    installDevTools(Immutable);\r\n}\r\n\r\nexport default function createReduxStore() {\r\n    let middlewares = [];\r\n\r\n    const persistConfig = {\r\n        transforms: [immutableTransform({\r\n            records: [\r\n                shoppingInitialState,\r\n                shoppingItem,\r\n            ]})],\r\n        key: 'shopping',\r\n        storage: storage,\r\n        stateReconciler: autoMergeLevel1,\r\n    };\r\n    const presistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\n    let debuggWrapper = (data) => data;\r\n    if (process.env.NODE_ENV === 'development') {\r\n        const composeWithDevTools =\r\n                window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n            ||  require('remote-redux-devtools').composeWithDevTools;        \r\n        debuggWrapper = composeWithDevTools({ realtime: true });    \r\n    }\r\n    const store = createStore(\r\n        presistedReducer,\r\n        rootInitialState,\r\n        debuggWrapper(\r\n            applyMiddleware(...middlewares),\r\n            // other store enhancers if any\r\n        )\r\n    );\r\n\r\n    const persistor = persistStore(store, null, () => {\r\n        // console.log('Persistor Callback: ' + JSON.stringify(store.getState()));\r\n    });\r\n\r\n    return { store, persistor };\r\n}","import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport createReduxStore from './store';\nimport ShoppingItemList from './containers/ShoppingItemList';\n\nconst { store, persistor } = createReduxStore();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <ShoppingItemList></ShoppingItemList>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();"],"sourceRoot":""}